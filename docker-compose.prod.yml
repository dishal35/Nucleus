version: '3.8'

services:
  nginx:
    image: ${DOCKER_USERNAME}/nucleus-nginx:latest
    ports:
      - "80:80"
      - "443:443"  # For HTTPS
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    image: ${DOCKER_USERNAME}/nucleus-frontend:latest
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://your-domain.com/api
    networks:
      - app-network
    restart: unless-stopped

  backend:
    image: ${DOCKER_USERNAME}/nucleus-backend:latest
    environment:
      - NODE_ENV=production
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      - RABBUITMQ_URL=amqp://rabbitmq:5672
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
      - rabbitmq

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge 